'use client';

import React, { useEffect, useRef } from 'react';
import { gsap } from 'gsap';
import '@/styles/components/AnimatedLink.scss';

const AnimatedLink = ({ color, url, children, type }) => {
  const textRef = useRef(null);

  const animateText = () => {
    console.log('entered link');
    const items = textRef.current.querySelectorAll('.char');
    console.log('item', items);
    gsap.to(items, {
      yPercent: -100,
      stagger: 0.02,
      duration: 0.5,
      ease: 'power1.inOut',
    });
  };

  const animateOut = () => {
    console.log('left link');
    const items = textRef.current.querySelectorAll('.char');
    console.log('item', items);
    gsap.to(items, {
      yPercent: 0,
      stagger: 0.02,
      duration: 0.5,
      ease: 'power1.inOut',
    });
  };

  return (
    <a
      onMouseOver={animateText}
      onMouseLeave={animateOut}
      href={url}
      target="_blank"
      rel="noopener noreferrer"
      className="y__link"
    >
      <span className="y__link_wrap">
        <span
          className={`y__link_txt ${
            type === 'header' && 'y__link_txt_hidden'
          } ${type === 'socials' && 'y__link_txt_mobilenav'}`}
          ref={textRef}
          // data-animation="h"
        >
          {children}
        </span>
      </span>
      {type !== 'header' && (
        <svg
          width="13"
          height="13"
          viewBox="0 0 13 13"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className={` ${type === 'arrowLink' ? 'svg_hidden' : ''}`}
        >
          <path d="M14.3588 1.63953C14.4028 1.66806 14.4415 1.70449 14.4832 1.73966C14.5115 1.76262 14.544 1.77631 14.5717 1.80326C14.5833 1.81459 14.5872 1.82992 14.5982 1.84174C14.6115 1.85512 14.6289 1.86275 14.6416 1.87779C14.652 1.89009 14.6554 1.90591 14.6657 1.91938C14.6773 1.93305 14.6918 1.94078 14.7027 1.95611C14.7275 1.99136 14.7348 2.02953 14.7555 2.06585C14.7802 2.10696 14.8056 2.14641 14.8245 2.19005C14.8371 2.22032 14.8508 2.2496 14.8605 2.27997C14.8788 2.33698 14.886 2.39271 14.8955 2.44884C14.9022 2.48867 14.9107 2.52586 14.9122 2.56539C14.9138 2.59438 14.9159 2.62171 14.9146 2.65079C14.913 2.70915 14.8987 2.76185 14.8862 2.81776C14.8778 2.85504 14.8712 2.89085 14.8582 2.92617C14.8487 2.95154 14.8404 2.97594 14.8286 3.00091C14.8056 3.04804 14.7728 3.08588 14.7412 3.12743C14.7224 3.15124 14.7176 3.18207 14.6959 3.20363C14.5332 3.37665 10.738 7.47796 14.0038 13.0216C14.0739 13.1406 14.1223 13.2691 14.1462 13.3995C14.1701 13.53 14.1691 13.6599 14.1433 13.7819C14.1174 13.9039 14.0671 14.0155 13.9954 14.1104C13.9236 14.2054 13.8318 14.2817 13.7251 14.3352C13.6184 14.3886 13.499 14.418 13.3736 14.4218C13.2482 14.4256 13.1193 14.4037 12.9943 14.3573C12.8693 14.3109 12.7506 14.2409 12.645 14.1513C12.5394 14.0618 12.449 13.9544 12.3789 13.8353C10.6759 10.9444 10.5423 8.3647 10.9575 6.33025L2.18042 13.6519C1.99688 13.805 1.74889 13.8666 1.49098 13.823C1.23308 13.7795 0.986395 13.6344 0.8052 13.4198C0.624005 13.2051 0.52314 12.9384 0.524796 12.6783C0.526451 12.4183 0.63049 12.1862 0.814026 12.0331L9.59115 4.7114C7.50368 4.7635 4.97082 4.18526 2.40274 2.01592C2.18917 1.83566 2.04165 1.58645 1.99263 1.32312C1.94361 1.05979 1.9971 0.803896 2.14133 0.611743C2.28557 0.41959 2.50873 0.306914 2.76174 0.298502C3.01474 0.290091 3.27685 0.386632 3.49041 0.56689C8.41552 4.72632 13.1374 1.72293 13.3341 1.59493C13.3662 1.57397 13.4046 1.57224 13.439 1.55636C13.4857 1.53375 13.5277 1.50333 13.5784 1.49019C13.5976 1.48581 13.6168 1.48612 13.636 1.48292C13.6855 1.47427 13.7349 1.47616 13.7854 1.47591C13.8343 1.47477 13.8803 1.46788 13.9296 1.47562C13.954 1.47857 13.9778 1.48552 14.0022 1.49081C14.0516 1.50207 14.0968 1.5226 14.1455 1.5402C14.1919 1.55742 14.2377 1.56926 14.2835 1.59399C14.309 1.60767 14.3333 1.6235 14.3588 1.63953Z" />
        </svg>
      )}
    </a>
  );
};

export default AnimatedLink;
